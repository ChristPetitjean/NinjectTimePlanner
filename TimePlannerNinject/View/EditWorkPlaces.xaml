<UserControl x:Class="TimePlannerNinject.View.EditWorkPlaces"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:ignore="http://www.galasoft.ch/ignore"
        xmlns:model="clr-namespace:TimePlannerNinject.Model"
        xmlns:userControl="clr-namespace:TimePlannerNinject.UserControl"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:command="http://www.galasoft.ch/mvvmlight"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d ignore"
             d:DesignHeight="710.448"
             d:DesignWidth="1098.507"
        DataContext="{Binding EditWorkPlaces, Source={StaticResource Locator}}">

    <Grid Background="AliceBlue">
        <DataGrid x:Name="DataGridWorkPlace" SelectedValuePath="Id" ItemsSource="{Binding AllPlaces, Mode=TwoWay}"  Background="Transparent" IsSynchronizedWithCurrentItem="True" AutoGenerateColumns="False" CanUserAddRows="True" CanUserDeleteRows="False" IsReadOnly="False">
            <DataGrid.Columns>
                <DataGridTextColumn Header="Nom du lieu" Width="*" Binding="{Binding Name}" SortDirection="Ascending" ></DataGridTextColumn>
                <DataGridTemplateColumn Header="Date de début par défaut" Width="*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate DataType="{x:Type model:WorkPlace}">
                            <TextBlock Text="{Binding DefaultStartTime, Converter={StaticResource DateTimeToTimeConverter}}"></TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate DataType="{x:Type model:WorkPlace}">
                     <xctk:TimePicker Value="{Binding DefaultStartTime, Mode=TwoWay}"></xctk:TimePicker>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Date de fin par défaut" Width="*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate DataType="{x:Type model:WorkPlace}">
                            <TextBlock Text="{Binding DefaultEndTime, Converter={StaticResource DateTimeToTimeConverter}}"></TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate DataType="{x:Type model:WorkPlace}">
                            <xctk:TimePicker Value="{Binding DefaultEndTime, Mode=TwoWay}"></xctk:TimePicker>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Kilomètres aller" Width="*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate DataType="{x:Type model:WorkPlace}">
                            <TextBlock Text="{Binding OneWayKilometers, FallbackValue=0}"></TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate DataType="{x:Type model:WorkPlace}">
                            <xctk:DecimalUpDown Value="{Binding OneWayKilometers, Mode=TwoWay}" DisplayDefaultValueOnEmptyText="True" DefaultValue="0"></xctk:DecimalUpDown>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Kilomètres retour" Width="*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate DataType="{x:Type model:WorkPlace}">
                            <TextBlock Text="{Binding ReturnKilometers, FallbackValue=0}" ></TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate DataType="{x:Type model:WorkPlace}">
                            <xctk:DecimalUpDown Value="{Binding ReturnKilometers, Mode=TwoWay}" DisplayDefaultValueOnEmptyText="True" DefaultValue="0"></xctk:DecimalUpDown>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Couleur" Width="*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate DataType="{x:Type model:WorkPlace}">
                            <Border BorderBrush="Black" BorderThickness="1">
                                <Border.Background>
                                    <SolidColorBrush Color="{Binding Color}"></SolidColorBrush>
                                </Border.Background>
                            </Border>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate DataType="{x:Type model:WorkPlace}">
                            <xctk:ColorPicker SelectedColor="{Binding Color, Mode=TwoWay}" UsingAlphaChannel="True"></xctk:ColorPicker>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="" Width="15">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Background="Transparent" Command="{Binding DataContext.DeleteWorkPlaceCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}}" CommandParameter="{Binding ElementName=DataGridWorkPlace, Path=SelectedValue}" ToolTip="Supprimer">
                                <Path Width="10" Height="10" Stretch="Uniform" Fill="Red" Data="F1 M 0,7.89185L 2.65756,4.4368L 0.181,1.25839L 2.38931,0L 4.49869,2.51559L 6.72134,0L 8.78256,1.25839L 6.38541,4.33398L 9.15366,7.89185L 6.92319,9.15292L 4.49869,6.31573L 2.05209,9.15292L 0,7.89185 Z" />
                            </Button>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
            <DataGrid.ColumnHeaderStyle>
                <Style TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="Height" Value="60"></Setter>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Grid>
                                    <Border x:Name="columnHeaderBorder" BorderThickness="1" BorderBrush="Black" Background="AliceBlue">
                                        <TextBlock Text="{Binding .}" HorizontalAlignment="Center" VerticalAlignment="Center" TextWrapping="Wrap" FontWeight="Bold"></TextBlock>
                                    </Border>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </DataGrid.ColumnHeaderStyle>
            <DataGrid.RowStyle>
                <Style TargetType="{x:Type DataGridRow}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding}" Value="{x:Static CollectionView.NewItemPlaceholder}">
                            <DataTrigger.Setters>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <Button HorizontalAlignment="Left" Background="Transparent" BorderBrush="Transparent" BorderThickness="0" Margin="3,0,0,0" Command="{Binding DataContext.AddNewWorkplaceCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}">
                                                <Path VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Stretch="Uniform" UseLayoutRounding="False" Fill="Green" Data="F1 M 2.88,17.2725C 0.959991,15.3475 0,12.95 0,10.08C 0,7.21002 0.959991,4.8125 2.88,2.88751C 4.80002,0.962494 7.19125,0 10.0537,0C 12.9163,0 15.3163,0.962494 17.2538,2.88751C 19.1913,4.8125 20.16,7.21002 20.16,10.08C 20.16,12.95 19.1913,15.3475 17.2538,17.2725C 15.3163,19.1975 12.9163,20.16 10.0537,20.16C 7.19125,20.16 4.80002,19.1975 2.88,17.2725 Z M 3.84,11.3625L 8.81998,11.3625L 8.81998,16.32L 11.34,16.32L 11.34,11.3625L 16.32,11.3625L 16.32,8.85001L 11.34,8.85001L 11.34,3.84L 8.81998,3.84L 8.81998,8.85001L 3.84,8.85001L 3.84,11.3625 Z "/>
                                            </Button>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger.Setters>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>
        </DataGrid>
    </Grid>
</UserControl>
