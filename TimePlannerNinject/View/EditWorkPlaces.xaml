<UserControl x:Class="TimePlannerNinject.View.EditWorkPlaces"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:ignore="http://www.galasoft.ch/ignore"
        xmlns:model="clr-namespace:TimePlannerNinject.Model"
        xmlns:userControl="clr-namespace:TimePlannerNinject.UserControl"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:command="http://www.galasoft.ch/mvvmlight"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        mc:Ignorable="d ignore"
             d:DesignHeight="710.448"
             d:DesignWidth="1098.507"
        DataContext="{Binding EditWorkPlaces, Source={StaticResource Locator}}">

    <Grid Background="AliceBlue">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"></ColumnDefinition>
            <ColumnDefinition Width="Auto"></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <GroupBox Header="Liste des lieux de travail" Grid.Column="0">
            <Grid>
                <DataGrid x:Name="DataGridWorkPlace" ItemsSource="{Binding AllPlaces, Mode=TwoWay}" SelectedItem="{Binding SelectedWorkplace, Mode=TwoWay}" Background="Transparent" IsSynchronizedWithCurrentItem="True" AutoGenerateColumns="False" CanUserAddRows="True" CanUserDeleteRows="False" IsReadOnly="False">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Nom du lieu" Width="*" Binding="{Binding Name}" IsReadOnly="True"></DataGridTextColumn>
                        <DataGridTextColumn Header="Date de début par défaut" Width="*" Binding="{Binding DefaultStartTime, Converter={StaticResource DateTimeToTimeConverter}}" IsReadOnly="True"></DataGridTextColumn>
                        <DataGridTextColumn Header="Date de fin par défaut"  Width="*" Binding="{Binding DefaultEndTime, Converter={StaticResource DateTimeToTimeConverter}}" IsReadOnly="True"></DataGridTextColumn>
                        <DataGridTextColumn Header="Kilomètres aller" Width="*" Binding="{Binding OneWayKilometers}" IsReadOnly="True"></DataGridTextColumn>
                        <DataGridTextColumn Header="Kilomètres retour" Width="*" Binding="{Binding ReturnKilometers}" IsReadOnly="True"></DataGridTextColumn>
                        <DataGridTemplateColumn Header="Couleur" Width="*" IsReadOnly="True">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate DataType="{x:Type model:WorkPlace}">
                                    <Border BorderBrush="Black" BorderThickness="1">
                                        <Border.Background>
                                            <SolidColorBrush Color="{Binding Color}"></SolidColorBrush>
                                        </Border.Background>
                                    </Border>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                    <DataGrid.ColumnHeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="Height" Value="60"></Setter>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Grid>
                                            <Border x:Name="columnHeaderBorder" BorderThickness="1" BorderBrush="Black" Background="AliceBlue">
                                                <TextBlock Text="{Binding .}" HorizontalAlignment="Center" VerticalAlignment="Center" TextWrapping="Wrap" FontWeight="Bold"></TextBlock>
                                            </Border>
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </DataGrid.ColumnHeaderStyle>
                    <DataGrid.RowStyle>
                        <Style TargetType="{x:Type DataGridRow}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding}" Value="{x:Static CollectionView.NewItemPlaceholder}">
                                    <DataTrigger.Setters>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate>
                                                    <Button HorizontalAlignment="Left" Background="Transparent" BorderThickness="0" Margin="3,0,0,0" Command="{Binding DataContext.AddNewWorkplaceCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}">
                                                        <Path Height="40" Stretch="Uniform" UseLayoutRounding="False" Fill="Green" Data="F1 M 2.88,17.2725C 0.959991,15.3475 0,12.95 0,10.08C 0,7.21002 0.959991,4.8125 2.88,2.88751C 4.80002,0.962494 7.19125,0 10.0537,0C 12.9163,0 15.3163,0.962494 17.2538,2.88751C 19.1913,4.8125 20.16,7.21002 20.16,10.08C 20.16,12.95 19.1913,15.3475 17.2538,17.2725C 15.3163,19.1975 12.9163,20.16 10.0537,20.16C 7.19125,20.16 4.80002,19.1975 2.88,17.2725 Z M 3.84,11.3625L 8.81998,11.3625L 8.81998,16.32L 11.34,16.32L 11.34,11.3625L 16.32,11.3625L 16.32,8.85001L 11.34,8.85001L 11.34,3.84L 8.81998,3.84L 8.81998,8.85001L 3.84,8.85001L 3.84,11.3625 Z "/>
                                                    </Button>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger.Setters>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.RowStyle>
                </DataGrid>
            </Grid>
        </GroupBox>
        <GroupBox Header="Modification" Grid.Column="1">
            <StackPanel>
                <StackPanel.Style>
                    <Style TargetType="{x:Type StackPanel}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=DataGridWorkPlace, Path=SelectedIndex}" Value="-1">
                                <Setter Property="IsEnabled" Value="False"></Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Style>
                <GroupBox Header="Nom du lieu">
                    <TextBox Text="{Binding ElementName=DataGridWorkPlace, Path=SelectedItem.(model:WorkPlace.Name)}"></TextBox>
                </GroupBox>
                <GroupBox Header="Nombre de kilomètres Domicile - Lieu de travail (aller)">
                    <xctk:IntegerUpDown Value="{Binding ElementName=DataGridWorkPlace, Path=SelectedItem.(model:WorkPlace.OneWayKilometers)}"></xctk:IntegerUpDown>
                </GroupBox>
                <GroupBox Header="Nombre de kilomètres Domicile - Lieu de travail (retour)">
                    <xctk:IntegerUpDown Value="{Binding ElementName=DataGridWorkPlace, Path=SelectedItem.(model:WorkPlace.ReturnKilometers)}"></xctk:IntegerUpDown>
                </GroupBox>
                <GroupBox Header="Heure de début par défaut">
                    <xctk:TimePicker Value="{Binding ElementName=DataGridWorkPlace, Path=SelectedItem.(model:WorkPlace.DefaultStartTime)}"></xctk:TimePicker>
                </GroupBox>
                <GroupBox Header="Heure de fin par défaut">
                    <xctk:TimePicker Value="{Binding ElementName=DataGridWorkPlace, Path=SelectedItem.(model:WorkPlace.DefaultEndTime)}"></xctk:TimePicker>
                </GroupBox>
                <GroupBox Header="Couleur du lieu">
                    <xctk:ColorPicker SelectedColor="{Binding ElementName=DataGridWorkPlace, Path=SelectedItem.(model:WorkPlace.Color)}"></xctk:ColorPicker>
                </GroupBox>
            </StackPanel>
        </GroupBox>
    </Grid>
</UserControl>
